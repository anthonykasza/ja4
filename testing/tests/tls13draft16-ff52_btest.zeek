# @TEST-EXEC: zeek $PACKAGE %INPUT >output
# @TEST-EXEC: cat ja4.log | zeek-cut ja4 o r ro grease_hash > ja4.filtered
# @TEST-EXEC: btest-diff ja4.filtered
# @TEST-EXEC: btest-diff output

event my_finalize_ssl(dummy: connection) {
  hook SSL::finalize_ssl(dummy);
}

event zeek_init() {
  local dummy: connection = [
    $uid="UUIIDD",
    $start_time=network_time(),
    $id=[
      $orig_h=1.1.1.1, $orig_p=1/tcp,
      $resp_h=2.2.2.2, $resp_p=2/tcp
    ],
    $orig=[$size=0, $state=0, $flow_label=0],
    $resp=[$size=0, $state=0, $flow_label=0],
    $duration=0msec,
    $service=set("SSL"),
    $history=""
  ];

  event ssl_extension(dummy, T, 23, "");
  event ssl_extension(dummy, T, 65281, "\x00");
  event ssl_extension(dummy, T, 10, "\x00\x0c\x00\x1d\x00\x17\x00\x18\x00\x19\x01\x00\x01\x01");
  event ssl_extension(dummy, T, 11, "\x01\x00");
  event ssl_extension(dummy, T, 35, "");
  event ssl_extension_application_layer_protocol_negotiation(dummy, T, vector("h2", "http/1.1"));
  event ssl_extension(dummy, T, 16, "\x00\x0c\x02h2\x08http/1.1");
  event ssl_extension(dummy, T, 5, "\x01\x00\x00\x00\x00");
  event ssl_extension(dummy, T, 18, "");
  event ssl_extension(dummy, T, 40, "\x00\xce\x00\x1d\x00 \xec\xdb\xb0\xc1K6\xf2M\x18!6M\xb0@\x9d\xce\x9c\x9a\xdf)\xf5\xd4Q\xf6\x1b\xf2\xeb\xe5\xbd\xdd\xd2\\x00\x17\x00A\x04\xb4\xfa\x8a\xc9\xcc[\x80\x8b\xc5\xea\xea\xc3\xa6*{\xc8Y\xf9v\x11\xa8\x80\xc2IM\xa4\xce\xc1\x00fG\x0c\xef\xeb{\x975\xc6\x86\x85\x96\xd4f>\x1a\xc9i\x013\xd0_\xa2@\xc8\x0c\x99\xed?\x02\xb9y\x1c\xb0\x91\x00\x18\x00a\x04X\xcb\xf6\x1et\xa5\xb1u\x8f\xaa^\xb63}o\x11\x81[\x9b)G\\x8e\xe5\xb37R\x81A\x01\xc6\x9e\x18U\x91\xf3\x95\x15\x93\x16ru\x043\x02\xb8\xa2>\xcb\xf0.AX#N|\x07\xdba\xb8\xba\xa0\xf3\xf2\x9am\x93Z\xb3w\xcd\x09\x06N\xa4\x1c%i\x88\xa6C\xdcv\xd1,>rK\xf21\x91\xbf`\x10\xbbq");
  event ssl_extension_supported_versions(dummy, T, vector(32528, 771, 770, 769));
  event ssl_extension(dummy, T, 43, "\x08\x7f\x10\x03\x03\x03\x02\x03\x01");
  event ssl_extension_signature_algorithm(dummy, T, vector([$HashAlgorithm=4, $SignatureAlgorithm=3], [$HashAlgorithm=5, $SignatureAlgorithm=3], [$HashAlgorithm=6, $SignatureAlgorithm=3], [$HashAlgorithm=2, $SignatureAlgorithm=3], [$HashAlgorithm=8, $SignatureAlgorithm=4], [$HashAlgorithm=8, $SignatureAlgorithm=5], [$HashAlgorithm=8, $SignatureAlgorithm=6], [$HashAlgorithm=4, $SignatureAlgorithm=1], [$HashAlgorithm=5, $SignatureAlgorithm=1], [$HashAlgorithm=6, $SignatureAlgorithm=1], [$HashAlgorithm=2, $SignatureAlgorithm=1], [$HashAlgorithm=4, $SignatureAlgorithm=2], [$HashAlgorithm=5, $SignatureAlgorithm=2], [$HashAlgorithm=6, $SignatureAlgorithm=2], [$HashAlgorithm=2, $SignatureAlgorithm=2]));
  event ssl_extension(dummy, T, 13, "\x00\x1e\x04\x03\x05\x03\x06\x03\x02\x03\x08\x04\x08\x05\x08\x06\x04\x01\x05\x01\x06\x01\x02\x01\x04\x02\x05\x02\x06\x02\x02\x02");
  event ssl_extension(dummy, T, 21, "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00");
  event ssl_client_hello(dummy, 771, 769, network_time(), "\x06\xd0\xe8\xc6\x89\xcdR\x10P\xf7l\xd5\xd2x\x12\xd6\xbe\xca\x13C79\x13\xc0L\x13x!", "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00", vector(4865, 4867, 4866, 49195, 49199, 52393, 52392, 49196, 49200, 49162, 49161, 49171, 49172, 51, 57, 47, 53, 10), vector(0));
  event my_finalize_ssl(dummy);
  event ssl_extension(dummy, F, 13, "");
  event ssl_extension(dummy, F, 40, "\x00\x18\x00a\x04{o\xc2\xde\xe0\\xac\xeea[(\x03\xab\xc8o\x02\x04\x12\x85\x02\xc3\x88b\x7f\xc1\xe9\xf9@73V\xc5_\xab\xeb1Q:l\x96\xce\xb6\xde\xad`\xe5SuP?d\xe4)\xf0{H\xee\x0e\xd5h\x04\x17\xc9QU7\xc22F\xe9%\xcd\xb1\xd6-\xb3g\x1a\x9b\xefd\xd83Z-\x06\xc9\xe5}\x1c\xb4H\xef\x9cN\x02");
  event ssl_extension(dummy, T, 23, "");
  event ssl_extension(dummy, T, 65281, "\x00");
  event ssl_extension(dummy, T, 10, "\x00\x0c\x00\x1d\x00\x17\x00\x18\x00\x19\x01\x00\x01\x01");
  event ssl_extension(dummy, T, 11, "\x01\x00");
  event ssl_extension(dummy, T, 35, "");
  event ssl_extension_application_layer_protocol_negotiation(dummy, T, vector("h2", "http/1.1"));
  event ssl_extension(dummy, T, 16, "\x00\x0c\x02h2\x08http/1.1");
  event ssl_extension(dummy, T, 5, "\x01\x00\x00\x00\x00");
  event ssl_extension(dummy, T, 18, "");
  event ssl_extension(dummy, T, 40, "\x00\xce\x00\x1d\x00 \xd9O3\x8ex\xbc0%\xa6\xfb\xa0\xdeK\x16\xab\xf7:O\x0e.\x90\xa8\x9f\xe0\xfe\,\xdbu\xa90<\x00\x17\x00A\x04*\xb0\xd9\x0f\xbd\xd2{\xf8\xda\x88K\x0e\xb2\x09\x18\x8c\xff.\xcd\x1cUj\x87E_y\xcd\"\xb1\xa3m\xe8\xd7j\x05\x1cB\xb9`N\xa4\x0e<\xa5_CS\x9a\xe5\x85\">\x0c\xdc\x0d[\x0b\x9f\xa9\x9d\x16\xa0OM\x00\x18\x00a\x04\x9bk8\xdb\x9b\xf5\xea\xbb\xedV\xe4\xee\xdc\xb7\x9dO\xf3q\xea\x90\xf1*w\xa9\xde\xc1\xcdx\xc3\xca\x15\xb2\xef@\xa84:\xaf\xeb{A\xfd\xe3\xff\x9d\xc7\xc3{})\xc2\x96\xd8y\xbe_\xbf6~s\xa2\xc1\xbf\xee\xd3\x15^\xc9\xcej\xe9 \x9b\xf9\x94\xce\x93\x87\xfa\x01\xf1\xb2\x14O \x11\xa0\xc7\xb0\xa6n\xb1\x1e[\xae\x0a");
  event ssl_extension_supported_versions(dummy, T, vector(32528, 771, 770, 769));
  event ssl_extension(dummy, T, 43, "\x08\x7f\x10\x03\x03\x03\x02\x03\x01");
  event ssl_extension_signature_algorithm(dummy, T, vector([$HashAlgorithm=4, $SignatureAlgorithm=3], [$HashAlgorithm=5, $SignatureAlgorithm=3], [$HashAlgorithm=6, $SignatureAlgorithm=3], [$HashAlgorithm=2, $SignatureAlgorithm=3], [$HashAlgorithm=8, $SignatureAlgorithm=4], [$HashAlgorithm=8, $SignatureAlgorithm=5], [$HashAlgorithm=8, $SignatureAlgorithm=6], [$HashAlgorithm=4, $SignatureAlgorithm=1], [$HashAlgorithm=5, $SignatureAlgorithm=1], [$HashAlgorithm=6, $SignatureAlgorithm=1], [$HashAlgorithm=2, $SignatureAlgorithm=1], [$HashAlgorithm=4, $SignatureAlgorithm=2], [$HashAlgorithm=5, $SignatureAlgorithm=2], [$HashAlgorithm=6, $SignatureAlgorithm=2], [$HashAlgorithm=2, $SignatureAlgorithm=2]));
  event ssl_extension(dummy, T, 13, "\x00\x1e\x04\x03\x05\x03\x06\x03\x02\x03\x08\x04\x08\x05\x08\x06\x04\x01\x05\x01\x06\x01\x02\x01\x04\x02\x05\x02\x06\x02\x02\x02");
  event ssl_extension(dummy, T, 21, "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00");
  event ssl_client_hello(dummy, 771, 769, network_time(), "VQH\xac\x11\x9c\xd3\xce\xdc\xcb\x12\xe5(\xd1\xcfF\x88\x0d\x8d\xee\xf9/\xe9\x10:\xe6\x15\x1a", "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00", vector(4865, 4867, 4866, 49195, 49199, 52393, 52392, 49196, 49200, 49162, 49161, 49171, 49172, 51, 57, 47, 53, 10), vector(0));
  event my_finalize_ssl(dummy);
  event ssl_extension(dummy, F, 13, "");
  event ssl_extension(dummy, F, 40, "\x00\x18\x00a\x04\xe1\xb8%$b}\xd1V\x12n\xb5_1\xe8\xb37\x08?\xd5\xd1\xc9\xd0[|\x96\xcf\xf7\xf7'+9\xbb\x19\xdb\xef\xbc\xe7y\x08\x1c\xebM\x98\x11j\xdfM\xf4W\x11\xd8\xc0q7\x15\xc8\xa5\xd8]\xb6\xf8\xa3\xd3\xa4\x94\xebR\xcb_n\xf7\xf7\x1a+\xc3 \xb5J94)\xdc\xae\xffy'\xd0Cxc\xdf\xce\xa0Z\x95W");
}
